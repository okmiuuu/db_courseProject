DROP TABLE REVIEWS;
DROP TABLE BOOKS_IN_WAIT;
DROP TABLE ORDERSBOOKS;
DROP TABLE AUTHORSBOOKS;
DROP TABLE BOOKS_IN_BASKET;
DROP TABLE ORDERS;
DROP TABLE BOOKS;
DROP TABLE AUTHORS;
DROP TABLE PUBLISHERS;
DROP TABLE MANAGERS;
DROP TABLE CLIENTS;

CREATE TABLE MANAGERS (
  USERNAME NVARCHAR2(20) PRIMARY KEY,
  NAME NVARCHAR2(100),
  SURNAME NVARCHAR2(100),
  BIRTH_DATE DATE,
  SALARY NUMBER,
  WORKING_NOW NUMBER(1)
) TABLESPACE TS_COURSE;

CREATE TABLE CLIENTS (
  USERNAME NVARCHAR2(20) PRIMARY KEY,
  PASSWORD NVARCHAR2(20),
  NAME NVARCHAR2(100),
  SURNAME NVARCHAR2(100),
  EMAIL NVARCHAR2(20),
  ADDRESS NVARCHAR2(100),
  IS_BANNED NUMBER(1)
) TABLESPACE TS_COURSE;

CREATE TABLE PUBLISHERS(
  NAME NVARCHAR2(25) PRIMARY KEY,
  DESCRIPTION NVARCHAR2(200),
  MANAGER NVARCHAR2(20),
  AVAILABILITY NUMBER(1),
    CONSTRAINT FK_MANAGER
    FOREIGN KEY (MANAGER)
    REFERENCES MANAGERS(USERNAME)
) TABLESPACE TS_COURSE;

CREATE TABLE AUTHORS (
  ID INT PRIMARY KEY,
  NAME NVARCHAR2(100),
  SURNAME NVARCHAR2(100),
  PICTURE BLOB,
  BIRTH_DATE DATE,
  BIOGRAPHY NVARCHAR2(500),
  AVAILABILITY NUMBER(1)
) TABLESPACE TS_COURSE;

CREATE TABLE BOOKS (
  ID INT PRIMARY KEY,
  NAME NVARCHAR2(50),
  PICTURE BLOB,
  DESCRIPTION NVARCHAR2(500),
  QUANTITY_ON_STOCK NUMBER(3),
  COST NUMBER(5,2),
  GENRE NVARCHAR2(10),
  GRADE NUMBER(2,1),
  PUBLISHER NVARCHAR2(25),
  AVAILABILITY NUMBER(1),
    CONSTRAINT FK_PUBLISHER_BOOK
    FOREIGN KEY (PUBLISHER)
    REFERENCES PUBLISHERS(NAME),
    CONSTRAINT CHECK_QUANTITY 
    CHECK (QUANTITY_ON_STOCK >= 0),
    CONSTRAINT CHECK_COST 
    CHECK (COST > 0)
) TABLESPACE TS_COURSE;

CREATE TABLE BOOKS_IN_WAIT (
  BOOK_ID INT,
  CLIENT NVARCHAR2(20),
    CONSTRAINT FK_BOOK_APP
    FOREIGN KEY (BOOK_ID)
    REFERENCES BOOKS(ID),
   CONSTRAINT FK_CLIENT_APP
    FOREIGN KEY (CLIENT)
    REFERENCES CLIENTS(USERNAME)
) TABLESPACE TS_COURSE;

CREATE TABLE BOOKS_IN_BASKET (
  BOOK_ID INT,
  CLIENT NVARCHAR2(20),
    CONSTRAINT FK_BOOK_BASKET
    FOREIGN KEY (BOOK_ID)
    REFERENCES BOOKS(ID),
   CONSTRAINT FK_CLIENT_BASKET
    FOREIGN KEY (CLIENT)
    REFERENCES CLIENTS(USERNAME)
);

CREATE TABLE ORDERS (
  ID INT PRIMARY KEY,
  CLIENT NVARCHAR2(20),
  COST NUMBER(5,2),
  STATUS NVARCHAR2(30),
  MANAGER NVARCHAR2(20),
  SHIPPING_WAY NVARCHAR2(10),
  ORDER_DATE DATE,
    CONSTRAINT FK_CLIENT_ORDERS
    FOREIGN KEY (CLIENT)
    REFERENCES CLIENTS(USERNAME),
    CONSTRAINT FK_MANAGER_ORDERS
    FOREIGN KEY (MANAGER)
    REFERENCES MANAGERS(USERNAME)
) TABLESPACE TS_COURSE;

CREATE TABLE AUTHORSBOOKS (
  AUTHOR_ID INT,
  BOOK_ID INT,
    CONSTRAINT FK_AUTHOR_AB
    FOREIGN KEY (AUTHOR_ID)
    REFERENCES AUTHORS(ID),
    CONSTRAINT FK_BOOK_AB
    FOREIGN KEY (BOOK_ID)
    REFERENCES BOOKS(ID)
) TABLESPACE TS_COURSE;

CREATE TABLE ORDERSBOOKS (
  BOOK_ID INT,
  ORDER_ID INT,
    CONSTRAINT FK_ORDER_OB
    FOREIGN KEY (ORDER_ID)
    REFERENCES ORDERS(ID),
    CONSTRAINT FK_BOOK_OB
    FOREIGN KEY (BOOK_ID)
    REFERENCES BOOKS(ID)
) TABLESPACE TS_COURSE;

CREATE TABLE REVIEWS (
  ID INT,
  GRADE INT,
  CLIENT_AUTHOR NVARCHAR2(20),
  BOOK INT,
  TEXT NVARCHAR2(500),
    CONSTRAINT FK_CLIENT_REVIEW
    FOREIGN KEY (CLIENT_AUTHOR)
    REFERENCES CLIENTS(USERNAME),
    CONSTRAINT FK_BOOK_REVIEW
    FOREIGN KEY (BOOK)
    REFERENCES BOOKS(ID) 
) TABLESPACE TS_COURSE;

CREATE TABLE EX_XML_ORDERS (
      ORDER_DATE DATE,
      ORDER_ID INT,
      COST NUMBER(7,2)
);

CREATE TABLE XML_STORAGE (id int, XML_TEXT CLOB);

SELECT * FROM CLIENTS;
SELECT * FROM MANAGERS;
SELECT * FROM BOOKS;
SELECT * FROM AUTHORS;
SELECT * FROM PUBLISHERS;
SELECT * FROM AUTHORSBOOKS;
SELECT * FROM REVIEWS;

DELETE FROM REVIEWS;
